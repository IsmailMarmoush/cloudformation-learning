AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  Is-EC2-Classic:
    Fn::Not:
    - Condition: Is-EC2-VPC
  Is-EC2-VPC:
    Fn::Or:
    - Fn::Equals:
      - Ref: AWS::Region
      - eu-central-1
    - Fn::Equals:
      - Ref: AWS::Region
      - cn-north-1
Description: 'AWS CloudFormation Sample Template ElasticBeanstalk_Simple: Configure
  and launch an AWS Elastic Beanstalk application that connects to an Amazon RDS database
  instance. Monitoring is setup on the database. **WARNING** This template creates
  one or more Amazon EC2 instances and an Amazon Relational Database Service database
  instance. You will be billed for the AWS resources used if you create a stack from
  this template.'
Mappings:
  Region2Principal:
    ap-northeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-northeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-south-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ap-southeast-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    ca-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    cn-north-1:
      EC2Principal: ec2.amazonaws.com.cn
      OpsWorksPrincipal: opsworks.amazonaws.com.cn
    eu-central-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    eu-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    sa-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-east-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-east-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-1:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
    us-west-2:
      EC2Principal: ec2.amazonaws.com
      OpsWorksPrincipal: opsworks.amazonaws.com
Outputs:
  URL:
    Description: URL of the AWS Elastic Beanstalk Environment
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - SampleEnvironment
          - EndpointURL
Parameters:
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: Test database admin account password
    MaxLength: '41'
    MinLength: '8'
    NoEcho: 'true'
    Type: String
  DBUser:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Description: Test database admin account name
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  OperatorEMail:
    AllowedPattern: ([a-zA-Z0-9_\-\.]+)@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([a-zA-Z0-9\-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)
    ConstraintDescription: must be a valid email address.
    Description: EMail address to notify if there are any operational issues
    Type: String
Resources:
  AlarmTopic:
    Properties:
      Subscription:
      - Endpoint:
          Ref: OperatorEMail
        Protocol: email
    Type: AWS::SNS::Topic
  CPUAlarmHigh:
    Properties:
      AlarmActions:
      - Ref: AlarmTopic
      AlarmDescription: Alarm if CPU too high or metric disappears indicating the
        RDS database instance is having issues
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
      - Name: DBInstanceIdentifier
        Value:
          Ref: SampleDB
      EvaluationPeriods: '10'
      InsufficientDataActions:
      - Ref: AlarmTopic
      MetricName: CPUUtilization
      Namespace: AWS/RDS
      Period: '60'
      Statistic: Average
      Threshold: '50'
    Type: AWS::CloudWatch::Alarm
  DBEC2SecurityGroup:
    Condition: Is-EC2-VPC
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
      - FromPort: '3306'
        IpProtocol: tcp
        SourceSecurityGroupName:
          Ref: InstanceSecurityGroup
        ToPort: '3306'
    Type: AWS::EC2::SecurityGroup
  DBSecurityGroup:
    Condition: Is-EC2-Classic
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName:
          Ref: InstanceSecurityGroup
      GroupDescription: database access
    Type: AWS::RDS::DBSecurityGroup
  InstanceSecurityGroup:
    Properties:
      GroupDescription: RDS allows ingress from EC2 instances in this group.
      SecurityGroupIngress: []
    Type: AWS::EC2::SecurityGroup
  SampleApplication:
    Properties:
      Description: AWS Elastic Beanstalk Sample Application
    Type: AWS::ElasticBeanstalk::Application
  SampleApplicationVersion:
    Properties:
      ApplicationName:
        Ref: SampleApplication
      Description: Version 1.0
      SourceBundle:
        S3Bucket:
          Fn::Join:
          - '-'
          - - cloudformation-examples
            - Ref: AWS::Region
        S3Key: CloudFormationBeanstalkRDSExample.war
    Type: AWS::ElasticBeanstalk::ApplicationVersion
  SampleConfigurationTemplate:
    Properties:
      ApplicationName:
        Ref: SampleApplication
      Description: Default Configuration Version 1.0
      OptionSettings:
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: JDBC_CONNECTION_STRING
        Value:
          Fn::Join:
          - ''
          - - jdbc:mysql://
            - Fn::GetAtt:
              - SampleDB
              - Endpoint.Address
            - ':'
            - Fn::GetAtt:
              - SampleDB
              - Endpoint.Port
            - /beanstalkdb
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: PARAM1
        Value:
          Ref: DBUser
      - Namespace: aws:elasticbeanstalk:application:environment
        OptionName: PARAM2
        Value:
          Ref: DBPassword
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: SecurityGroups
        Value:
          Ref: InstanceSecurityGroup
      - Namespace: aws:autoscaling:launchconfiguration
        OptionName: IamInstanceProfile
        Value:
          Ref: WebServerInstanceProfile
      SolutionStackName: 64bit Amazon Linux 2015.03 v2.0.1 running Tomcat 7 Java 7
    Type: AWS::ElasticBeanstalk::ConfigurationTemplate
  SampleDB:
    Properties:
      AllocatedStorage: '5'
      DBInstanceClass: db.t2.small
      DBName: beanstalkdb
      DBSecurityGroups:
        Fn::If:
        - Is-EC2-Classic
        - - Ref: DBSecurityGroup
        - Ref: AWS::NoValue
      Engine: MySQL
      MasterUserPassword:
        Ref: DBPassword
      MasterUsername:
        Ref: DBUser
      VPCSecurityGroups:
        Fn::If:
        - Is-EC2-VPC
        - - Fn::GetAtt:
            - DBEC2SecurityGroup
            - GroupId
        - Ref: AWS::NoValue
    Type: AWS::RDS::DBInstance
  SampleEnvironment:
    Properties:
      ApplicationName:
        Ref: SampleApplication
      Description: AWS Elastic Beanstalk Environment running Sample Application
      TemplateName:
        Ref: SampleConfigurationTemplate
      VersionLabel:
        Ref: SampleApplicationVersion
    Type: AWS::ElasticBeanstalk::Environment
  WebServerInstanceProfile:
    Properties:
      Path: /
      Roles:
      - Ref: WebServerRole
    Type: AWS::IAM::InstanceProfile
  WebServerRole:
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Action:
          - sts:AssumeRole
          Effect: Allow
          Principal:
            Service:
            - Fn::FindInMap:
              - Region2Principal
              - Ref: AWS::Region
              - EC2Principal
      Path: /
    Type: AWS::IAM::Role
  WebServerRolePolicy:
    Properties:
      PolicyDocument:
        Statement:
        - Effect: Allow
          NotAction: iam:*
          Resource: '*'
      PolicyName: WebServerRole
      Roles:
      - Ref: WebServerRole
    Type: AWS::IAM::Policy
