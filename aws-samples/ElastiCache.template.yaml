AWSTemplateFormatVersion: '2010-09-09'
Description: 'AWS CloudFormation Sample Template ElastiCache: Sample template showing
  how to create an Amazon ElastiCache Cache Cluster with Auto Discovery and access
  it from a very simple PHP application. **WARNING** This template creates an Amazon
  EC2 Instance and an Amazon ElastiCache Cluster. You will be billed for the AWS resources
  used if you create a stack from this template.'
Mappings:
  AWSInstanceType2Arch:
    c1.medium:
      Arch: PV64
    c1.xlarge:
      Arch: PV64
    c3.2xlarge:
      Arch: HVM64
    c3.4xlarge:
      Arch: HVM64
    c3.8xlarge:
      Arch: HVM64
    c3.large:
      Arch: HVM64
    c3.xlarge:
      Arch: HVM64
    c4.2xlarge:
      Arch: HVM64
    c4.4xlarge:
      Arch: HVM64
    c4.8xlarge:
      Arch: HVM64
    c4.large:
      Arch: HVM64
    c4.xlarge:
      Arch: HVM64
    cc2.8xlarge:
      Arch: HVM64
    cr1.8xlarge:
      Arch: HVM64
    d2.2xlarge:
      Arch: HVM64
    d2.4xlarge:
      Arch: HVM64
    d2.8xlarge:
      Arch: HVM64
    d2.xlarge:
      Arch: HVM64
    g2.2xlarge:
      Arch: HVMG2
    g2.8xlarge:
      Arch: HVMG2
    hi1.4xlarge:
      Arch: HVM64
    hs1.8xlarge:
      Arch: HVM64
    i2.2xlarge:
      Arch: HVM64
    i2.4xlarge:
      Arch: HVM64
    i2.8xlarge:
      Arch: HVM64
    i2.xlarge:
      Arch: HVM64
    m1.large:
      Arch: PV64
    m1.medium:
      Arch: PV64
    m1.small:
      Arch: PV64
    m1.xlarge:
      Arch: PV64
    m2.2xlarge:
      Arch: PV64
    m2.4xlarge:
      Arch: PV64
    m2.xlarge:
      Arch: PV64
    m3.2xlarge:
      Arch: HVM64
    m3.large:
      Arch: HVM64
    m3.medium:
      Arch: HVM64
    m3.xlarge:
      Arch: HVM64
    m4.10xlarge:
      Arch: HVM64
    m4.2xlarge:
      Arch: HVM64
    m4.4xlarge:
      Arch: HVM64
    m4.large:
      Arch: HVM64
    m4.xlarge:
      Arch: HVM64
    r3.2xlarge:
      Arch: HVM64
    r3.4xlarge:
      Arch: HVM64
    r3.8xlarge:
      Arch: HVM64
    r3.large:
      Arch: HVM64
    r3.xlarge:
      Arch: HVM64
    t1.micro:
      Arch: PV64
    t2.large:
      Arch: HVM64
    t2.medium:
      Arch: HVM64
    t2.micro:
      Arch: HVM64
    t2.nano:
      Arch: HVM64
    t2.small:
      Arch: HVM64
  AWSInstanceType2NATArch:
    c1.medium:
      Arch: NATPV64
    c1.xlarge:
      Arch: NATPV64
    c3.2xlarge:
      Arch: NATHVM64
    c3.4xlarge:
      Arch: NATHVM64
    c3.8xlarge:
      Arch: NATHVM64
    c3.large:
      Arch: NATHVM64
    c3.xlarge:
      Arch: NATHVM64
    c4.2xlarge:
      Arch: NATHVM64
    c4.4xlarge:
      Arch: NATHVM64
    c4.8xlarge:
      Arch: NATHVM64
    c4.large:
      Arch: NATHVM64
    c4.xlarge:
      Arch: NATHVM64
    cc2.8xlarge:
      Arch: NATHVM64
    cr1.8xlarge:
      Arch: NATHVM64
    d2.2xlarge:
      Arch: NATHVM64
    d2.4xlarge:
      Arch: NATHVM64
    d2.8xlarge:
      Arch: NATHVM64
    d2.xlarge:
      Arch: NATHVM64
    g2.2xlarge:
      Arch: NATHVMG2
    g2.8xlarge:
      Arch: NATHVMG2
    hi1.4xlarge:
      Arch: NATHVM64
    hs1.8xlarge:
      Arch: NATHVM64
    i2.2xlarge:
      Arch: NATHVM64
    i2.4xlarge:
      Arch: NATHVM64
    i2.8xlarge:
      Arch: NATHVM64
    i2.xlarge:
      Arch: NATHVM64
    m1.large:
      Arch: NATPV64
    m1.medium:
      Arch: NATPV64
    m1.small:
      Arch: NATPV64
    m1.xlarge:
      Arch: NATPV64
    m2.2xlarge:
      Arch: NATPV64
    m2.4xlarge:
      Arch: NATPV64
    m2.xlarge:
      Arch: NATPV64
    m3.2xlarge:
      Arch: NATHVM64
    m3.large:
      Arch: NATHVM64
    m3.medium:
      Arch: NATHVM64
    m3.xlarge:
      Arch: NATHVM64
    m4.10xlarge:
      Arch: NATHVM64
    m4.2xlarge:
      Arch: NATHVM64
    m4.4xlarge:
      Arch: NATHVM64
    m4.large:
      Arch: NATHVM64
    m4.xlarge:
      Arch: NATHVM64
    r3.2xlarge:
      Arch: NATHVM64
    r3.4xlarge:
      Arch: NATHVM64
    r3.8xlarge:
      Arch: NATHVM64
    r3.large:
      Arch: NATHVM64
    r3.xlarge:
      Arch: NATHVM64
    t1.micro:
      Arch: NATPV64
    t2.large:
      Arch: NATHVM64
    t2.medium:
      Arch: NATHVM64
    t2.micro:
      Arch: NATHVM64
    t2.nano:
      Arch: NATHVM64
    t2.small:
      Arch: NATHVM64
  AWSRegionArch2AMI:
    ap-northeast-1:
      HVM64: ami-374db956
      HVMG2: ami-d95aabbf
      PV64: ami-3e42b65f
    ap-northeast-2:
      HVM64: ami-2b408b45
      HVMG2: NOT_SUPPORTED
      PV64: NOT_SUPPORTED
    ap-south-1:
      HVM64: ami-ffbdd790
      HVMG2: ami-f4cdb79b
      PV64: NOT_SUPPORTED
    ap-southeast-1:
      HVM64: ami-a59b49c6
      HVMG2: ami-15660276
      PV64: ami-df9e4cbc
    ap-southeast-2:
      HVM64: ami-dc361ebf
      HVMG2: ami-0b5a4168
      PV64: ami-63351d00
    ca-central-1:
      HVM64: ami-730ebd17
      HVMG2: NOT_SUPPORTED
      PV64: NOT_SUPPORTED
    cn-north-1:
      HVM64: ami-8e6aa0e3
      HVMG2: NOT_SUPPORTED
      PV64: ami-77559f1a
    eu-central-1:
      HVM64: ami-ea26ce85
      HVMG2: ami-40b8102f
      PV64: ami-6527cf0a
    eu-west-1:
      HVM64: ami-f9dd458a
      HVMG2: ami-aedb26d7
      PV64: ami-4cdd453f
    eu-west-2:
      HVM64: ami-886369ec
      HVMG2: NOT_SUPPORTED
      PV64: NOT_SUPPORTED
    sa-east-1:
      HVM64: ami-6dd04501
      HVMG2: NOT_SUPPORTED
      PV64: ami-1ad34676
    us-east-1:
      HVM64: ami-6869aa05
      HVMG2: ami-22b68b59
      PV64: ami-2a69aa47
    us-east-2:
      HVM64: ami-f6035893
      HVMG2: NOT_SUPPORTED
      PV64: NOT_SUPPORTED
    us-west-1:
      HVM64: ami-31490d51
      HVMG2: ami-cfe5cfaf
      PV64: ami-a2490dc2
    us-west-2:
      HVM64: ami-7172b611
      HVMG2: ami-be4ea3c6
      PV64: ami-7f77b31f
Outputs:
  WebsiteURL:
    Description: Application URL
    Value:
      Fn::Join:
      - ''
      - - http://
        - Fn::GetAtt:
          - WebServerInstance
          - PublicDnsName
Parameters:
  CacheNodeType:
    AllowedValues:
    - cache.m1.small
    - cache.m1.large
    - cache.m1.xlarge
    - cache.m2.xlarge
    - cache.m2.2xlarge
    - cache.m2.4xlarge
    - cache.c1.xlarge
    - cache.t2.micro
    - cache.t2.small
    - cache.t2.medium
    - cache.m3.medium
    - cache.m3.large
    - cache.m3.xlarge
    - cache.m3.2xlarge
    - cache.r3.large
    - cache.r3.xlarge
    - cache.r3.2xlarge
    - cache.r3.4xlarge
    - cache.r3.8xlarge
    ConstraintDescription: must select a valid Cache Node type.
    Default: cache.t2.small
    Description: The compute and memory capacity of the nodes in the Cache Cluster
    Type: String
  InstanceType:
    AllowedValues:
    - t1.micro
    - t2.nano
    - t2.micro
    - t2.small
    - t2.medium
    - t2.large
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    - m2.xlarge
    - m2.2xlarge
    - m2.4xlarge
    - m3.medium
    - m3.large
    - m3.xlarge
    - m3.2xlarge
    - m4.large
    - m4.xlarge
    - m4.2xlarge
    - m4.4xlarge
    - m4.10xlarge
    - c1.medium
    - c1.xlarge
    - c3.large
    - c3.xlarge
    - c3.2xlarge
    - c3.4xlarge
    - c3.8xlarge
    - c4.large
    - c4.xlarge
    - c4.2xlarge
    - c4.4xlarge
    - c4.8xlarge
    - g2.2xlarge
    - g2.8xlarge
    - r3.large
    - r3.xlarge
    - r3.2xlarge
    - r3.4xlarge
    - r3.8xlarge
    - i2.xlarge
    - i2.2xlarge
    - i2.4xlarge
    - i2.8xlarge
    - d2.xlarge
    - d2.2xlarge
    - d2.4xlarge
    - d2.8xlarge
    - hi1.4xlarge
    - hs1.8xlarge
    - cr1.8xlarge
    - cc2.8xlarge
    - cg1.4xlarge
    ConstraintDescription: must be a valid EC2 instance type.
    Default: t2.small
    Description: WebServer EC2 instance type
    Type: String
  KeyName:
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
    Description: Name of an existing EC2 KeyPair to enable SSH access to the web server
    Type: AWS::EC2::KeyPair::KeyName
  NumberOfCacheNodes:
    ConstraintDescription: must be between 5 and 10.
    Default: '1'
    Description: The nuber of Cache Nodes the Cache Cluster should have
    MaxValue: '10'
    MinValue: '1'
    Type: Number
  SSHLocation:
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.
    Default: 0.0.0.0/0
    Description: The IP address range that can be used to SSH to the EC2 instances
    MaxLength: '18'
    MinLength: '9'
    Type: String
Resources:
  CacheCluster:
    Properties:
      CacheNodeType:
        Ref: CacheNodeType
      CacheSecurityGroupNames:
      - Ref: CacheSecurityGroup
      Engine: memcached
      NumCacheNodes:
        Ref: NumberOfCacheNodes
    Type: AWS::ElastiCache::CacheCluster
  CacheSecurityGroup:
    Properties:
      Description: Lock cache down to Web Server access only
    Type: AWS::ElastiCache::SecurityGroup
  CacheSecurityGroupIngress:
    Properties:
      CacheSecurityGroupName:
        Ref: CacheSecurityGroup
      EC2SecurityGroupName:
        Ref: WebServerSecurityGroup
    Type: AWS::ElastiCache::SecurityGroupIngress
  WebServerInstance:
    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
    Metadata:
      AWS::CloudFormation::Init:
        config:
          commands:
            00_install_emcached_client:
              command: pecl install https://s3.amazonaws.com/elasticache-downloads/ClusterClient/PHP/latest-64bit
            01_enable_auto_discovery:
              command: echo 'extension=amazon-elasticache-cluster-client.so' > /etc/php.d/memcached.ini
          files:
            /etc/cfn/cfn-hup.conf:
              content:
                Fn::Join:
                - ''
                - - '[main]

                    '
                  - stack=
                  - Ref: AWS::StackId
                  - '

                    '
                  - region=
                  - Ref: AWS::Region
                  - '

                    '
              group: root
              mode: '000400'
              owner: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content:
                Fn::Join:
                - ''
                - - '[cfn-auto-reloader-hook]

                    '
                  - 'triggers=post.update

                    '
                  - 'path=Resources.WebServerInstance.Metadata.AWS::CloudFormation::Init

                    '
                  - 'action=/opt/aws/bin/cfn-init -v '
                  - '         --stack '
                  - Ref: AWS::StackName
                  - '         --resource WebServerInstance '
                  - '         --region '
                  - Ref: AWS::Region
                  - '

                    '
                  - 'runas=root

                    '
              group: root
              mode: '000400'
              owner: root
            /var/www/html/index.php:
              content:
                Fn::Join:
                - ''
                - - '<?php

                    '
                  - 'echo ''<h1>AWS CloudFormation sample application for Amazon ElastiCache</h1>'';

                    '
                  - '

                    '
                  - $server_endpoint = '
                  - Fn::GetAtt:
                    - CacheCluster
                    - ConfigurationEndpoint.Address
                  - ''';

                    '
                  - '$server_port = '
                  - Fn::GetAtt:
                    - CacheCluster
                    - ConfigurationEndpoint.Port
                  - ';

                    '
                  - '

                    '
                  - '/**

                    '
                  - ' * The following will initialize a Mecached client to utilize
                    the Auto Discovery feature.

                    '
                  - " * \n"
                  - ' * By configuring the client with the Dynamic client mode with
                    single endpoint, the

                    '
                  - ' * client will periodically use the configuration endpoint to
                    retrieve the current cache

                    '
                  - ' * cluster configuration. This allows scaling the cache cluster
                    up or down in nuber of nodes

                    '
                  - " * without requiring any changes to the PHP application. \n"
                  - ' */

                    '
                  - '

                    '
                  - '$dynamic_client = new Memcached();

                    '
                  - '$dynamic_client->setOption(Memcached::OPT_CLIENT_MODE, Memcached::DYNAMIC_CLIENT_MODE);

                    '
                  - '$dynamic_client->addServer($server_endpoint, $server_port);

                    '
                  - '

                    '
                  - '$tmp_object = new stdClass;

                    '
                  - '$tmp_object->str_attr = ''test'';

                    '
                  - '$tmp_object->int_attr = 123;

                    '
                  - '

                    '
                  - '$dynamic_client->set(''key'', $tmp_object, 10) or die (''Failed
                    to save data to the cache'');

                    '
                  - 'echo ''<p>Store data in the cache (data will expire in 10 seconds)</p>'';

                    '
                  - '

                    '
                  - '$get_result = $dynamic_client->get(''key'');

                    '
                  - 'echo ''<p>Data from the cache:<br/>'';

                    '
                  - '

                    '
                  - 'var_dump($get_result);

                    '
                  - '

                    '
                  - 'echo ''</p>'';

                    '
                  - '?>

                    '
              group: apache
              mode: '000644'
              owner: apache
          packages:
            yum:
              gcc-c++: []
              httpd: []
              php: []
              php-pear: []
          services:
            sysvinit:
              cfn-hup:
                enabled: 'true'
                ensureRunning: 'true'
                files:
                - /etc/cfn/cfn-hup.conf
                - /etc/cfn/hooks.d/cfn-auto-reloader.conf
              httpd:
                enabled: 'true'
                ensureRunning: 'true'
    Properties:
      ImageId:
        Fn::FindInMap:
        - AWSRegionArch2AMI
        - Ref: AWS::Region
        - Fn::FindInMap:
          - AWSInstanceType2Arch
          - Ref: InstanceType
          - Arch
      InstanceType:
        Ref: InstanceType
      KeyName:
        Ref: KeyName
      SecurityGroups:
      - Ref: WebServerSecurityGroup
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - '#!/bin/bash -xe

              '
            - 'yum update -y aws-cfn-bootstrap

              '
            - '# Setup the PHP sample application

              '
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - Ref: AWS::StackName
            - '         --resource WebServerInstance '
            - '         --region '
            - Ref: AWS::Region
            - '

              '
            - '# Signal the status of cfn-init

              '
            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - Ref: AWS::StackName
            - '         --resource WebServerInstance '
            - '         --region '
            - Ref: AWS::Region
            - '

              '
    Type: AWS::EC2::Instance
  WebServerSecurityGroup:
    Properties:
      GroupDescription: Enable HTTP and SSH access
      SecurityGroupIngress:
      - CidrIp:
          Ref: SSHLocation
        FromPort: '22'
        IpProtocol: tcp
        ToPort: '22'
      - CidrIp: 0.0.0.0/0
        FromPort: '80'
        IpProtocol: tcp
        ToPort: '80'
    Type: AWS::EC2::SecurityGroup
