AWSTemplateFormatVersion: '2010-09-09'
Conditions:
  Is-EC2-Classic:
    Fn::Not:
    - Condition: Is-EC2-VPC
  Is-EC2-VPC:
    Fn::Or:
    - Fn::Equals:
      - Ref: AWS::Region
      - eu-central-1
    - Fn::Equals:
      - Ref: AWS::Region
      - cn-north-1
Description: 'AWS CloudFormation Sample Template RDS_MySQL_With_Read_Replica: Sample
  template showing how to create a highly-available, RDS DBInstance with a read replica.
  **WARNING** This template creates an Amazon Relational Database Service database
  instance and Amazon CloudWatch alarms. You will be billed for the AWS resources
  used if you create a stack from this template.'
Outputs:
  EC2Platform:
    Description: Platform in which this stack is deployed
    Value:
      Fn::If:
      - Is-EC2-VPC
      - EC2-VPC
      - EC2-Classic
  MasterJDBCConnectionString:
    Description: JDBC connection string for the master database
    Value:
      Fn::Join:
      - ''
      - - jdbc:mysql://
        - Fn::GetAtt:
          - MasterDB
          - Endpoint.Address
        - ':'
        - Fn::GetAtt:
          - MasterDB
          - Endpoint.Port
        - /
        - Ref: DBName
  ReplicaJDBCConnectionString:
    Description: JDBC connection string for the replica database
    Value:
      Fn::Join:
      - ''
      - - jdbc:mysql://
        - Fn::GetAtt:
          - ReplicaDB
          - Endpoint.Address
        - ':'
        - Fn::GetAtt:
          - ReplicaDB
          - Endpoint.Port
        - /
        - Ref: DBName
Parameters:
  DBAllocatedStorage:
    ConstraintDescription: must be between 5 and 1024Gb.
    Default: '5'
    Description: The size of the database (Gb)
    MaxValue: '1024'
    MinValue: '5'
    Type: Number
  DBInstanceClass:
    AllowedValues:
    - db.t1.micro
    - db.m1.small
    - db.m1.medium
    - db.m1.large
    - db.m1.xlarge
    - db.m2.xlarge
    - db.m2.2xlarge
    - db.m2.4xlarge
    - db.m3.medium
    - db.m3.large
    - db.m3.xlarge
    - db.m3.2xlarge
    - db.m4.large
    - db.m4.xlarge
    - db.m4.2xlarge
    - db.m4.4xlarge
    - db.m4.10xlarge
    - db.r3.large
    - db.r3.xlarge
    - db.r3.2xlarge
    - db.r3.4xlarge
    - db.r3.8xlarge
    - db.m2.xlarge
    - db.m2.2xlarge
    - db.m2.4xlarge
    - db.cr1.8xlarge
    - db.t2.micro
    - db.t2.small
    - db.t2.medium
    - db.t2.large
    ConstraintDescription: must select a valid database instance type.
    Default: db.t2.small
    Description: The database instance type
    Type: String
  DBName:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Default: MyDatabase
    Description: The database name
    MaxLength: '64'
    MinLength: '1'
    Type: String
  DBPassword:
    AllowedPattern: '[a-zA-Z0-9]+'
    ConstraintDescription: must contain only alphanumeric characters.
    Description: The database admin account password
    MaxLength: '41'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  DBUser:
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: must begin with a letter and contain only alphanumeric
      characters.
    Description: The database admin account username
    MaxLength: '16'
    MinLength: '1'
    NoEcho: 'true'
    Type: String
  EC2SecurityGroup:
    AllowedPattern: '[a-zA-Z0-9\-]+'
    ConstraintDescription: must be a valid security group name.
    Default: default
    Description: The EC2 security group that contains instances that need access to
      the database
    Type: String
  MultiAZ:
    AllowedValues:
    - 'true'
    - 'false'
    ConstraintDescription: must be true or false.
    Default: 'false'
    Description: Multi-AZ master database
    Type: String
Resources:
  DBEC2SecurityGroup:
    Condition: Is-EC2-VPC
    Properties:
      GroupDescription: Open database for access
      SecurityGroupIngress:
      - FromPort: '3306'
        IpProtocol: tcp
        SourceSecurityGroupName:
          Ref: EC2SecurityGroup
        ToPort: '3306'
    Type: AWS::EC2::SecurityGroup
  DBSecurityGroup:
    Condition: Is-EC2-Classic
    Properties:
      DBSecurityGroupIngress:
        EC2SecurityGroupName:
          Ref: EC2SecurityGroup
      GroupDescription: database access
    Type: AWS::RDS::DBSecurityGroup
  MasterDB:
    DeletionPolicy: Snapshot
    Properties:
      AllocatedStorage:
        Ref: DBAllocatedStorage
      DBInstanceClass:
        Ref: DBInstanceClass
      DBName:
        Ref: DBName
      DBSecurityGroups:
        Fn::If:
        - Is-EC2-Classic
        - - Ref: DBSecurityGroup
        - Ref: AWS::NoValue
      Engine: MySQL
      MasterUserPassword:
        Ref: DBPassword
      MasterUsername:
        Ref: DBUser
      MultiAZ:
        Ref: MultiAZ
      Tags:
      - Key: Name
        Value: Master Database
      VPCSecurityGroups:
        Fn::If:
        - Is-EC2-VPC
        - - Fn::GetAtt:
            - DBEC2SecurityGroup
            - GroupId
        - Ref: AWS::NoValue
    Type: AWS::RDS::DBInstance
  ReplicaDB:
    Properties:
      DBInstanceClass:
        Ref: DBInstanceClass
      SourceDBInstanceIdentifier:
        Ref: MasterDB
      Tags:
      - Key: Name
        Value: Read Replica Database
    Type: AWS::RDS::DBInstance
